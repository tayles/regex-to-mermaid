%% Regex: ^(?<protocol>https?):\/\/(?:www\.)?([a-z0-9\-]+)\.(?:com|org|net)(?:\/[^\s]*)?(?=query)\1\d{3,5}\w+\s*\S+[^abc](?!neg)(?<!back)$|alt\b\B.

graph LR
  %% Nodes
  start@{ shape: f-circ };
  fin@{ shape: f-circ };
  disjunction_begin_1:::disjunction@{ shape: f-circ };
  disjunction_end_1:::disjunction@{ shape: f-circ };
  assertion_1("^<br><i><small>Begins with</small></i>"):::assertion;
  literal_1("http"):::literal;
  literal_2("s<br><i><small>Optional</small></i>"):::literal;
  literal_3("://"):::literal;
  literal_4("www."):::literal;
  char_class_1("Any lowercase<br>Any digit<br>-<br><i><small>One or more</small></i>"):::char-class;
  literal_5("Any character"):::literal;
  disjunction_begin_2:::disjunction@{ shape: f-circ };
  disjunction_end_2:::disjunction@{ shape: f-circ };
  disjunction_begin_3:::disjunction@{ shape: f-circ };
  disjunction_end_3:::disjunction@{ shape: f-circ };
  literal_6("com"):::literal;
  literal_7("org"):::literal;
  literal_8("net"):::literal;
  literal_9("/"):::literal;
  negated_char_class_1("Not \s<br><i><small>Zero or more</small></i>"):::negated-char-class;
  assertion_2("Lookahead"):::assertion;
  back_reference_1("\1<br><i><small>Back-reference</small></i>"):::back-reference;
  literal_10("Any digit<br><i><small>3 to 5</small></i>"):::literal;
  literal_11("Any word character<br><i><small>One or more</small></i>"):::literal;
  literal_12("Any whitespace<br><i><small>Zero or more</small></i>"):::literal;
  literal_13("Not whitespace<br><i><small>One or more</small></i>"):::literal;
  negated_char_class_2("Not a<br>b<br>c"):::negated-char-class;
  assertion_3("Lookahead"):::assertion;
  assertion_4("Lookbehind"):::assertion;
  assertion_5("$<br><i><small>Ends with</small></i>"):::assertion;
  literal_14("alt"):::literal;
  assertion_6("\b<br><i><small>Word boundary</small></i>"):::assertion;
  assertion_7("\B<br><i><small>Non-word boundary</small></i>"):::assertion;
  literal_15("Any character"):::literal;
  
  %% Subgraphs
  subgraph named_capture_1 ["<small>#1</small> protocol"]
    literal_1
    literal_2
  end
  
  subgraph non_capturing_1 ["Non-capturing <small><i>Optional</i></small>"]
    literal_4
  end
  
  subgraph standard_1 ["<small>#2</small> Group 2"]
    char_class_1
  end
  
  subgraph non_capturing_2 ["Non-capturing"]
    disjunction_begin_2
    disjunction_end_2
    disjunction_begin_3
    disjunction_end_3
    literal_6
    literal_7
    literal_8
  end
  
  subgraph non_capturing_3 ["Non-capturing <small><i>Optional</i></small>"]
    literal_9
    negated_char_class_1
  end
  
  %% Edges
  start --- disjunction_begin_1;
  disjunction_begin_1 --- assertion_1;
  assertion_1 --- literal_1;
  literal_1 --- literal_2;
  literal_2 --- literal_3;
  literal_3 --- literal_4;
  literal_4 --- char_class_1;
  char_class_1 --- literal_5;
  literal_5 --- disjunction_begin_2;
  disjunction_begin_2 --- disjunction_begin_3;
  disjunction_begin_3 --- literal_6;
  literal_6 --- disjunction_end_3;
  disjunction_begin_3 --- literal_7;
  literal_7 --- disjunction_end_3;
  disjunction_end_3 --- disjunction_end_2;
  disjunction_begin_2 --- literal_8;
  literal_8 --- disjunction_end_2;
  disjunction_end_2 --- literal_9;
  literal_9 --- negated_char_class_1;
  negated_char_class_1 --- assertion_2;
  assertion_2 --- back_reference_1;
  back_reference_1 --- literal_10;
  literal_10 --- literal_11;
  literal_11 --- literal_12;
  literal_12 --- literal_13;
  literal_13 --- negated_char_class_2;
  negated_char_class_2 --- assertion_3;
  assertion_3 --- assertion_4;
  assertion_4 --- assertion_5;
  assertion_5 --- disjunction_end_1;
  disjunction_begin_1 --- literal_14;
  literal_14 --- assertion_6;
  assertion_6 --- assertion_7;
  assertion_7 --- literal_15;
  literal_15 --- disjunction_end_1;
  disjunction_end_1 --- fin;
  
  %% Styles
  %% Node Styling
  classDef disjunction fill:#FFD966,stroke:#F1C232;
  classDef assertion fill:#B6D7A8,stroke:#93C47D;
  classDef literal fill:#F9CB9C,stroke:#E69138;
  classDef char-class fill:#B4A7D6,stroke:#8E7CC3;
  classDef negated-char-class fill:#EA9999,stroke:#CC0000;
  classDef back-reference fill:#F4CCCC,stroke:#E06666;
  
  %% Group Styling
  classDef named-capture fill:#D9EAD3,stroke:#93C47D;
  classDef non-capturing fill:#CFE2F3,stroke:#6D9EEB;
  classDef standard fill:#FFF2CC,stroke:#F1C232;
  
  %% Apply Group Classes
  class named_capture_1 named-capture;
  class non_capturing_1,non_capturing_2,non_capturing_3 non-capturing;
  class standard_1 standard;

%% Generated with regex-to-mermaid@1.0.0
